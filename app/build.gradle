apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'
apply plugin: 'com.google.gms.google-services'

def getProperty(String filename, String propName) {
    def propsFile = rootProject.file(filename)
    if (propsFile.exists()) {
        def props = new Properties()
        props.load(new FileInputStream(propsFile))
        if (props[propName] != null) {
            return props[propName]
        } else {
            print("No such property " + propName + " in file " + filename)
        }
    } else {
        print(filename + " does not exist!")
    }
}

android {
    compileSdkVersion 28
    defaultConfig {
        applicationId "com.example.hackgsu19"
        minSdkVersion 27
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        buildConfigField "String", "PETFINDER_API_KEY", "\"${getProperty("local.properties", "petfinder_api_key")}\""
        buildConfigField "String", "PETFINDER_API_SECRET", "\"${getProperty("local.properties", "petfinder_api_secret")}\""
        resValue "string", "GOOGLEMAPS_API_KEY", "\"${getProperty("local.properties", "googleMaps_api_key")}\""
        resValue "string", "FACEBOOK_APP_ID", "\"${getProperty("local.properties", "facebook_ap_id")}\""
        resValue "string", "FACEBOOK_LOGIN_PROTOCOL_SCHEMA", "\"${getProperty("local.properties", "facebook_login_protocol_schema")}\""
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'androidx.appcompat:appcompat:1.0.2'

    // For Design
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation 'com.google.android.material:material:1.1.0-alpha05'
    implementation 'androidx.recyclerview:recyclerview:1.0.0'
    implementation 'androidx.fragment:fragment:1.0.0'
    implementation 'androidx.cardview:cardview:1.0.0'

    // For profile images
    implementation 'de.hdodenhof:circleimageview:3.0.1'

    // Volley for HTTP
    implementation 'com.android.volley:volley:1.1.1'
    // For API calls
//    implementation "com.squareup.retrofit2:retrofit:2.6.0"
//    implementation "com.squareup.retrofit2:converter-gson:2.6.0"
//    implementation "com.squareup.okhttp3:logging-interceptor:4.1.0"
//    implementation "com.google.code.gson:gson:2.8.5"
    implementation 'com.loopj.android:android-async-http:1.4.9'
    implementation 'com.google.firebase:firebase-database:16.0.4'
    testImplementation "com.squareup.okhttp3:mockwebserver:4.1.0"

    // For API Image rendering
    implementation 'com.squareup.picasso:picasso:2.5.2'

    // For APIs themselves
    implementation 'com.google.android.gms:play-services-maps:16.1.0'
    implementation 'com.google.android.gms:play-services-location:16.0.0'
//    implementation 'com.facebook.android:facebook-android-sdk:4.41.0'
    implementation 'com.facebook.android:facebook-android-sdk:[5,6)'

    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test:runner:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.1.1'
    apply plugin: 'kotlin-android-extensions'
    implementation 'androidx.room:room-runtime:2.1.0'
    annotationProcessor 'androidx.room:room-compiler:2.1.0'

    implementation 'com.squareup.picasso:picasso:2.5.2'
}
